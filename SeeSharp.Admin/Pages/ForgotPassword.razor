@page "/forgot-password"
@using System.ComponentModel.DataAnnotations
@inject HttpClient Http
@inject NavigationManager Navigation

<PageTitle>Admin Portal - Forgot Password</PageTitle>

<div class="forgot-password-container">
    <!-- Breadcrumb -->
    <nav aria-label="breadcrumb" class="mb-4 breadcrumb-wrapper">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/">Dashboard</a></li>
            <li class="breadcrumb-item"><a href="/login">Login</a></li>
            <li class="breadcrumb-item active" aria-current="page">Forgot Password</li>
        </ol>
    </nav>

    <div class="row justify-content-center">
        <div class="col-md-10 col-lg-8">
            @if (!requestSent)
            {
                <div class="forgot-password-card">
                    <div class="row g-0 w-100">
                        <div class="col-lg-5 d-none d-lg-block position-relative">
                            <div class="forgot-password-banner">
                                <div class="overlay"></div>
                                <div class="banner-content">
                                    <i class="bi bi-shield-lock display-1 mb-3 text-glow"></i>
                                    <h3 class="fw-bold mb-3">Password Recovery</h3>
                                    <p class="mb-4">Don't worry, we'll help you get back into your account</p>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-7">
                            <div class="forgot-password-form-container">
                                <div class="text-center mb-4 d-lg-none">
                                    <i class="bi bi-shield-lock display-5 text-primary"></i>
                                </div>
                                <h2 class="forgot-password-title text-center">Reset Password</h2>

                                <p class="text-muted text-center mb-4">Enter your registered email address. We'll send you a link to reset your password.</p>

                                @if (notificationStatus == NotificationStatus.Fail)
                                {
                                    <div class="alert-custom alert-danger-custom fade show" style="@animationStyle" role="alert">
                                        <div class="alert-icon">
                                            <i class="bi bi-exclamation-triangle-fill"></i>
                                        </div>
                                        <div class="alert-message">
                                            @errorMessage
                                        </div>
                                        <button type="button" class="alert-close" @onclick="CloseNotification">
                                            <i class="bi bi-x"></i>
                                        </button>
                                    </div>
                                }

                                <EditForm Model="@forgotPasswordModel" OnValidSubmit="HandleForgotPassword" class="needs-validation">
                                    <DataAnnotationsValidator />
                                    <ValidationSummary class="text-danger small mb-3" />

                                    <div class="input-wrapper mb-4">
                                        <div class="form-floating">
                                            <InputText id="email" class="form-control" @bind-Value="forgotPasswordModel.Email" placeholder="Email" />
                                            <label for="email">
                                                <i class="bi bi-envelope-fill me-2 text-primary"></i>Email
                                            </label>
                                        </div>
                                        <ValidationMessage For="@(() => forgotPasswordModel.Email)" class="text-danger small" />
                                    </div>

                                    <button type="submit" class="btn-reset">
                                        @if (isProcessing)
                                        {
                                            <div class="d-flex align-items-center justify-content-center">
                                                <span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>
                                                <span>Processing...</span>
                                            </div>
                                        }
                                        else
                                        {
                                            <span>Send Reset Link</span>
                                            <i class="bi bi-send-fill ms-2"></i>
                                        }
                                    </button>

                                    <div class="text-center mt-4">
                                        <a href="/login" class="return-login-link">
                                            <i class="bi bi-arrow-left-short me-1"></i>
                                            Back to Login
                                        </a>
                                    </div>
                                </EditForm>
                            </div>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="success-card">
                    <div class="text-center">
                        <div class="success-icon-wrapper">
                            <i class="bi bi-envelope-check-fill"></i>
                        </div>
                        <h3 class="mt-4 mb-3">Email Sent</h3>
                        <p>We've sent a password reset link to:</p>
                        <p class="email-display">@forgotPasswordModel.Email</p>
                        <div class="guide-box mt-4 mb-4">
                            <p class="fw-semibold mb-2"><i class="bi bi-info-circle me-2"></i>Note:</p>
                            <ul class="guide-list text-start">
                                <li>Check your inbox and spam folder</li>
                                <li>The link is valid for 24 hours</li>
                                <li>If you don't receive the email, try again in a few minutes</li>
                            </ul>
                        </div>
                        <button class="btn-return" @onclick="ResetForm">
                            <i class="bi bi-arrow-left me-2"></i>
                            Try with different email
                        </button>
                        <div class="mt-3">
                            <a href="/login" class="return-login-link">Back to Login</a>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<style>
    /* Main container */
    .forgot-password-container {
        max-width: 1200px;
        margin: 2rem auto;
        padding: 0 1.5rem;
    }

    /* Breadcrumb styling */
    .breadcrumb-wrapper {
        margin-bottom: 2rem;
    }

    .breadcrumb-item a {
        color: #6c757d;
        text-decoration: none;
        font-weight: 500;
        transition: color 0.3s ease;
    }

    .breadcrumb-item a:hover {
        color: #4361ee;
    }

    .breadcrumb-item.active {
        color: #212529;
        font-weight: 600;
    }

    /* Cards styling */
    .forgot-password-card, .success-card {
        border: none;
        border-radius: 1.25rem;
        overflow: hidden;
        box-shadow: 0 15px 35px rgba(50, 50, 93, 0.1), 0 5px 15px rgba(0, 0, 0, 0.07);
        transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
        background-color: #fff;
        height: auto;
        display: flex;
    }

    .forgot-password-card:hover, .success-card:hover {
        box-shadow: 0 20px 40px rgba(50, 50, 93, 0.15), 0 10px 20px rgba(0, 0, 0, 0.1);
        transform: translateY(-5px);
    }

    /* Banner section */
    .forgot-password-banner {
        height: 100%;
        background-image: url('https://images.unsplash.com/photo-1565373987291-4d7424dd9e59?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1470&q=80');
        background-size: cover;
        background-position: center;
        position: relative;
    }

    .overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(135deg, rgba(67, 97, 238, 0.9) 0%, rgba(58, 12, 163, 0.85) 100%);
    }

    .banner-content {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        text-align: center;
        color: white;
        width: 90%;
        z-index: 1;
    }

    .text-glow {
        text-shadow: 0 0 20px rgba(255, 255, 255, 0.7);
    }

    /* Form container */
    .forgot-password-form-container {
        padding: 3.5rem 2.5rem;
        background-color: #fff;
    }

    .forgot-password-title {
        font-weight: 700;
        margin-bottom: 2.5rem;
        color: #212529;
        position: relative;
        display: inline-block;
        left: 50%;
        transform: translateX(-50%);
    }

    .forgot-password-title:after {
        content: '';
        position: absolute;
        width: 40%;
        height: 4px;
        background: linear-gradient(90deg, #4361ee, #3a0ca3);
        bottom: -12px;
        left: 30%;
        border-radius: 4px;
    }

    /* Form elements */
    .input-wrapper {
        margin-bottom: 1.75rem;
        position: relative;
    }

    .form-floating {
        position: relative;
    }

    .form-floating > .form-control {
        height: calc(3.5rem + 2px);
        line-height: 1.25;
        padding: 1rem 0.75rem;
        border-radius: 0.75rem;
        font-size: 1rem;
        transition: all 0.3s ease;
    }

    .form-floating > label {
        position: absolute;
        top: 0;
        left: 0;
        height: 100%;
        padding: 1rem 0.75rem;
        pointer-events: none;
        border: 1px solid transparent;
        transform-origin: 0 0;
        transition: opacity 0.2s ease-in-out, transform 0.2s ease-in-out;
        color: #6c757d;
    }

    .form-floating > .form-control:focus ~ label,
    .form-floating > .form-control:not(:placeholder-shown) ~ label {
        opacity: 0.8;
        transform: scale(0.85) translateY(-0.75rem) translateX(0.15rem);
        background-color: #fff;
        padding: 0 0.5rem;
        height: auto;
        border-radius: 4px;
        z-index: 5;
        color: #4361ee;
        font-weight: 500;
    }

    .form-control {
        border: 2px solid #e9ecef;
        background-color: #f8f9fa;
        transition: all 0.3s ease;
        font-size: 1rem;
        color: #495057;
    }

    .form-control:focus {
        box-shadow: 0 0 0 0.25rem rgba(67, 97, 238, 0.25);
        border-color: #4361ee;
        background-color: #fff;
    }

    /* Reset button */
    .btn-reset {
        width: 100%;
        padding: 0.9rem;
        border-radius: 0.75rem;
        background: linear-gradient(45deg, #4361ee, #3a0ca3);
        color: white;
        font-weight: 600;
        font-size: 1.05rem;
        border: none;
        margin-bottom: 1.5rem;
        display: flex;
        justify-content: center;
        align-items: center;
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
        z-index: 1;
        letter-spacing: 0.5px;
    }

    .btn-reset:before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(45deg, #3a0ca3, #4361ee);
        transition: all 0.4s ease;
        z-index: -1;
    }

    .btn-reset:hover:before {
        left: 0;
    }

    .btn-reset:hover {
        transform: translateY(-3px);
        box-shadow: 0 10px 20px rgba(67, 97, 238, 0.4);
    }
    
    .btn-reset:active {
        transform: translateY(-1px);
        box-shadow: 0 5px 10px rgba(67, 97, 238, 0.4);
    }

    /* Return to login link */
    .return-login-link {
        color: #4361ee;
        text-decoration: none;
        font-weight: 600;
        transition: all 0.3s;
        display: inline-flex;
        align-items: center;
    }

    .return-login-link:hover {
        color: #3a0ca3;
        transform: translateX(-3px);
    }

    /* Success card styling */
    .success-card {
        background-color: white;
        border-radius: 1.25rem;
        padding: 3rem;
        text-align: center;
    }

    .success-icon-wrapper {
        width: 80px;
        height: 80px;
        background: rgba(67, 97, 238, 0.1);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0 auto;
        color: #4361ee;
        font-size: 2.5rem;
        animation: pulse 2s infinite;
    }

    @@keyframes pulse {
        0% {
            box-shadow: 0 0 0 0 rgba(67, 97, 238, 0.4);
        }
        70% {
            box-shadow: 0 0 0 10px rgba(67, 97, 238, 0);
        }
        100% {
            box-shadow: 0 0 0 0 rgba(67, 97, 238, 0);
        }
    }

    .email-display {
        background-color: #f8f9fa;
        border-radius: 0.5rem;
        padding: 0.75rem;
        font-weight: 600;
        color: #4361ee;
        display: inline-block;
        margin: 0.5rem auto;
        font-size: 1.1rem;
        border: 1px dashed rgba(67, 97, 238, 0.3);
    }

    .guide-box {
        background-color: rgba(67, 97, 238, 0.05);
        border-radius: 0.75rem;
        padding: 1.25rem;
        border-left: 4px solid #4361ee;
    }

    .guide-list {
        margin: 0;
        padding-left: 1.5rem;
    }

    .guide-list li {
        margin-bottom: 0.5rem;
        position: relative;
    }

    .btn-return {
        background-color: white;
        border: 2px solid #4361ee;
        color: #4361ee;
        font-weight: 600;
        padding: 0.75rem 1.5rem;
        border-radius: 0.75rem;
        transition: all 0.3s;
        display: inline-flex;
        align-items: center;
        cursor: pointer;
    }

    .btn-return:hover {
        background-color: rgba(67, 97, 238, 0.1);
        transform: translateY(-2px);
    }

    /* Alert styles */
    .alert-custom {
        position: relative;
        padding: 1rem 1.5rem;
        border-radius: 0.75rem;
        margin-bottom: 1.75rem;
        display: flex;
        align-items: center;
        justify-content: center;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
    }

    .alert-danger-custom {
        background-color: #fff5f5;
        border-left: 5px solid #e63946;
        color: #e63946;
    }

    .alert-icon {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 38px;
        height: 38px;
        background-color: rgba(230, 57, 70, 0.15);
        border-radius: 50%;
        margin-right: 1rem;
    }

    .alert-danger-custom .alert-icon i {
        color: #e63946;
        font-size: 1.2rem;
    }

    .alert-message {
        font-weight: 600;
        font-size: 1.05rem;
        flex-grow: 1;
        text-align: center;
    }

    .alert-close {
        position: absolute;
        top: 0.5rem;
        right: 0.5rem;
        padding: 0.5rem;
        background: transparent;
        border: none;
        cursor: pointer;
        color: #e63946;
        opacity: 0.7;
        font-size: 1.1rem;
        transition: all 0.3s ease;
        border-radius: 50%;
        width: 30px;
        height: 30px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .alert-close:hover {
        opacity: 1;
        background-color: rgba(230, 57, 70, 0.1);
    }

    /* Media queries */
    @@media (max-width: 991.98px) {
        .forgot-password-form-container {
            padding: 2.5rem 2rem;
        }
    }

    @@media (max-width: 767.98px) {
        .forgot-password-card, .success-card {
            margin: 1rem;
            border-radius: 1rem;
        }
        
        .form-floating > .form-control {
            height: calc(3.25rem + 2px);
        }
        
        .forgot-password-form-container {
            padding: 2rem 1.5rem;
        }
        
        .forgot-password-title {
            margin-bottom: 2rem;
        }
        
        .success-card {
            padding: 2rem 1.5rem;
        }
    }

    @@media (max-width: 575.98px) {
        .forgot-password-container {
            margin: 1rem auto;
            padding: 0 1rem;
        }
        
        .breadcrumb-wrapper {
            margin-bottom: 1.5rem;
        }
    }
</style>

@code {
    private ForgotPasswordModel forgotPasswordModel = new();
    private bool isProcessing = false;
    private bool requestSent = false;
    private string errorMessage = string.Empty;
    public NotificationStatus notificationStatus = NotificationStatus.None;
    private string animationStyle = "opacity: 0; transform: translateY(-20px);";
    
    public enum NotificationStatus
    {
        None = 0,
        Success = 1,
        Fail = 2
    }

    private void CloseNotification()
    {
        notificationStatus = NotificationStatus.None;
        animationStyle = "opacity: 0; transform: translateY(-20px); transition: opacity 0.5s ease, transform 0.5s ease;";
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (notificationStatus == NotificationStatus.Fail)
        {
            await Task.Delay(50);
            animationStyle = "opacity: 1; transform: translateY(0); transition: all 0.5s ease-out;";
            StateHasChanged();
        }
    }

    private async Task HandleForgotPassword()
    {
        isProcessing = true;
        
        try
        {
            var response = await Http.PostAsJsonAsync("https://localhost:7222/api/employees/reset-password", forgotPasswordModel);
            
            if (response.IsSuccessStatusCode)
            {
                requestSent = true;
            }
            else
            {
                errorMessage = await response.Content.ReadAsStringAsync();
                if (string.IsNullOrEmpty(errorMessage))
                {
                    errorMessage = "Failed to send reset link. Please try again.";
                }
                notificationStatus = NotificationStatus.Fail;
                StartNotificationAnimation();
            }
        }
        catch (Exception ex)
        {
            errorMessage = "An error occurred. Please try again later.";
            notificationStatus = NotificationStatus.Fail;
            StartNotificationAnimation();
            Console.WriteLine($"Error: {ex.Message}");
        }
        
        isProcessing = false;
    }

    private void ResetForm()
    {
        requestSent = false;
        forgotPasswordModel = new ForgotPasswordModel();
        notificationStatus = NotificationStatus.None;
    }

    private void StartNotificationAnimation()
    {
        animationStyle = "opacity: 1; transform: translateY(0); transition: opacity 0.5s ease, transform 0.5s ease;";
    }

    public class ForgotPasswordModel
    {
        [Required(ErrorMessage = "Email is required")]
        [EmailAddress(ErrorMessage = "Invalid email format")]
        public string Email { get; set; } = string.Empty;
    }
} 